// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Employee {
  id        String   @id @default(uuid())
  name      String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shifts    Shift[]
}

model Role {
  id          String    @id @default(uuid())
  name        String
  basePayRate Decimal   @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  shifts      Shift[]
  configs     RoleConfig[]

  @@index([name])
}

model Shift {
  id           String   @id @default(uuid())
  employeeId   String
  employee     Employee @relation(fields: [employeeId], references: [id])
  roleId       String
  role         Role     @relation(fields: [roleId], references: [id])
  date         DateTime
  hours        Decimal
  cashTips     Decimal  @default(0)
  creditTips   Decimal  @default(0)
  liquorSales  Decimal  @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([date])
  @@index([employeeId])
  @@index([roleId])
}

model RoleConfig {
  id             String    @id @default(uuid())
  roleId         String
  tipoutType     String
  percentageRate Decimal   @default(0)
  effectiveFrom  DateTime  @default(now())
  effectiveTo    DateTime?
  receivesTipout Boolean   @default(false)
  paysTipout     Boolean   @default(true)  
  distributionGroup String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  role           Role      @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@index([roleId])
  @@unique([roleId, tipoutType, effectiveFrom])
}
